{"version":3,"sources":["components/List.js","components/Input.js","pages/TodoList.js","index.js"],"names":["List","arr1","this","props","todos","filter","item","done","arr2","length","renderTodos","Component","Input","input","focus","htmlFor","id","ref","info","value","inpValue","type","onChange","handleChange","onClick","addTodo","TodoList","e","setState","target","state","title","delTodo","idx","index","toggle","newTodos","JSON","parse","stringify","map","todo","checked","dangerouslySetInnerHTML","__html","localStorage","getItem","setItem","className","ReactDOM","render","document","getElementById"],"mappings":"6KAuBeA,E,uKAlBP,IAAIC,EAAKC,KAAKC,MAAMC,MAAMC,QAEtB,SAACC,GAAD,OAASA,EAAKC,QAGdC,EAAKN,KAAKC,MAAMC,MAAMC,QACtB,SAACC,GAAD,OAAQA,EAAKC,QAEjB,OACI,6BACI,uDAASN,EAAKQ,QACd,4BAAKP,KAAKC,MAAMO,aAAY,IAC5B,uDAASF,EAAKC,QACtB,4BAAMP,KAAKC,MAAMO,aAAY,S,GAhBjBC,aCwBLC,E,kLArBPV,KAAKW,MAAMC,U,+BAGL,IAAD,OACL,OACI,6BACG,2BAAOC,QAAQ,OAAf,aACC,2BACAC,GAAG,MACHC,IAAK,SAAAC,GAAI,OAAE,EAAKL,MAAMK,GAEtBC,MAAOjB,KAAKC,MAAMiB,SAClBC,KAAK,OACLC,SAAUpB,KAAKC,MAAMoB,eAGrB,4BAAQC,QAAStB,KAAKC,MAAMsB,SAA5B,qB,GAnBKd,aC8GNe,E,kDA5GX,aAAc,IAAD,8BACT,gBAeJH,aAAa,SAACI,GAEV,EAAKC,SAAS,CAACR,SAASO,EAAEE,OAAOV,SAlBxB,EAkCbM,QAAQ,WAEoB,IAArB,EAAKK,MAAMV,WAGd,EAAKQ,SAAS,CACVxB,MAAM,CACF,CACA2B,MAAM,EAAKD,MAAMV,SACjBb,MAAK,IAHJ,mBAKE,EAAKuB,MAAM1B,UAGtB,EAAKwB,SAAS,CAACR,SAAS,OAhDf,EAkDbY,QAAQ,SAACC,GAOL,EAAKL,SAAS,CACVxB,MAAM,EAAK0B,MAAM1B,MAAMC,QAAO,SAACC,EAAK4B,GAAN,OAAcA,GAAOD,QA1D9C,EAsEbE,OAAO,SAACD,GACJ,IAAIE,EAASC,KAAKC,MAAMD,KAAKE,UAAU,EAAKT,MAAM1B,QAClDgC,EAASF,GAAO3B,MAAM6B,EAASF,GAAO3B,KACtC,EAAKqB,SAAS,CACVxB,MAAMgC,KA1ED,EAiFb1B,YAAY,SAACH,GACT,OAAQ,EAAKuB,MAAM1B,MAAMoC,KAAI,SAACC,EAAKR,GAC/B,GAAG1B,GAAMkC,EAAKlC,KACV,OAAO,4BACP,2BACAiB,QAAS,kBAAI,EAAKW,OAAOF,IACzBS,QAASD,EAAKlC,KACdc,KAAK,aAEL,0BAAMsB,wBAAyB,CAACC,OAAOH,EAAKV,SAC5C,4BAAQP,QAAS,kBAAI,EAAKQ,QAAQC,KAAlC,qBAzFR,EAAKH,MAAM,CACPV,SAAS,GACThB,MAAM,IAJD,E,gEAqBT,IAAIA,EAAMyC,aAAaC,QAAQ,SAC5B1C,GACCF,KAAK0B,SAAS,CACVxB,MAAMiC,KAAKC,MAAMlC,O,2CAKzByC,aAAaE,QACT,QACAV,KAAKE,UAAUrC,KAAK4B,MAAM1B,U,+BAiEzB,IAAD,EACgBF,KAAK4B,MAArB1B,EADA,EACAA,MAAMgB,EADN,EACMA,SAEV,OACI,yBAAK4B,UAAU,OACb,kBAAC,EAAD,CAAO5B,SAAUA,EAAUG,aAAcrB,KAAKqB,aAAcE,QAASvB,KAAKuB,UAC3E,kBAAC,EAAD,CAAMrB,MAAOA,EAAOM,YAAaR,KAAKQ,mB,GAvG3BC,aCExBsC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.cbbc2089.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\n class List extends Component {\r\n    render() {\r\n\r\n        let arr1=this.props.todos.filter(\r\n            // console.log(item,index)//方法一\r\n            (item)=>!item.done\r\n        )\r\n        // console.log(arr1);\r\n        let arr2=this.props.todos.filter(\r\n            (item)=>item.done\r\n        )\r\n        return (\r\n            <div>\r\n                <h2>正在进行{arr1.length}</h2>\r\n                <ul>{this.props.renderTodos(false)}</ul>\r\n                <h2>已经完成{arr2.length}</h2>\r\n        <ul >{this.props.renderTodos(true)}</ul>          \r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default List;","import React, { Component } from 'react'\r\n\r\n class Input extends Component {\r\n\r\n    componentDidMount(){\r\n        this.input.focus();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n               <label htmlFor=\"inp\"> todoList</label>\r\n                <input \r\n                id=\"inp\"\r\n                ref={info=>this.input=info}\r\n                // value={this.state.inpValue} \r\n                value={this.props.inpValue}\r\n                type=\"text\"\r\n                onChange={this.props.handleChange}\r\n                />\r\n                {/* input组件加value属性就受控 */}\r\n                <button onClick={this.props.addTodo} >添加</button> \r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Input;","import React, { Component } from 'react';\r\nimport List from '../components/List';\r\nimport Input from '../components/Input';\r\nclass  TodoList extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            inpValue:'',\r\n            todos:[\r\n                // {title:\"123\",done:\"false\"}\r\n                // {title:\"1\",done:\"false\"},\r\n                // {title:\"2\",done:\"true\"},\r\n                // {title:\"3\",done:\"true\"},\r\n                // {title:\"4\",done:\"false\"},\r\n\r\n            ]\r\n        }\r\n    }\r\n\r\n\r\n    handleChange=(e)=>{\r\n        // console.log(e.target.value);\r\n        this.setState({inpValue:e.target.value})\r\n    }\r\n    componentDidMount(){\r\n        let todos=localStorage.getItem('todos');\r\n        if(todos){\r\n            this.setState({\r\n                todos:JSON.parse(todos)\r\n            })\r\n        }\r\n    }\r\n    componentDidUpdate(){\r\n        localStorage.setItem(\r\n            'todos',\r\n            JSON.stringify(this.state.todos)\r\n        )\r\n    }\r\n    addTodo=()=>{\r\n        // this.state.todes.push({title:this.state.inpValue})//方法一\r\n        if(this.state.inpValue==''){\r\n            return;\r\n        }\r\n        this.setState({//方法二\r\n            todos:[\r\n                {\r\n                title:this.state.inpValue,\r\n                done:false\r\n                },\r\n                ...this.state.todos\r\n            ]\r\n        })\r\n        this.setState({inpValue:''});\r\n    }\r\n    delTodo=(idx)=>{\r\n        // let newTodos=JSON.parse(JSON.stringify(this.state.todos))\r\n        // this.state.todos.splice(idx,1);\r\n        // // this.setState({todos:this.state.todos})\r\n        // this.setState({todes:newTodos})\r\n\r\n\r\n        this.setState({\r\n            todos:this.state.todos.filter((item,index)=>index!=idx)\r\n        });\r\n         // setState 是异步执行的，注意callback的用法\r\n        // this.setState({\r\n        //     todos: this.state.todos.filter((item,index)=>index!=idx)\r\n        // },()=>{\r\n        //     localStorage.setItem(\r\n        //         'todos',\r\n        //         JSON.stringify(this.state.todos)\r\n        //     )\r\n        // });\r\n    }\r\n    toggle=(index)=>{\r\n        let newTodos=JSON.parse(JSON.stringify(this.state.todos))\r\n        newTodos[index].done=!newTodos[index].done;\r\n        this.setState({\r\n            todos:newTodos\r\n        })\r\n        // localStorage.setItem(\r\n        //     'todos',\r\n        //     JSON.stringify(this.state.done)\r\n        // )\r\n    }\r\n    renderTodos=(done)=>{        \r\n        return  this.state.todos.map((todo,idx)=>{\r\n            if(done==todo.done){\r\n                return <li>\r\n                <input \r\n                onClick={()=>this.toggle(idx)}\r\n                checked={todo.done} \r\n                type=\"checkbox\"\r\n                />\r\n                <span dangerouslySetInnerHTML={{__html:todo.title}}></span>\r\n                <button onClick={()=>this.delTodo(idx)}>删除</button>\r\n              </li>\r\n            }           \r\n        })        \r\n    }\r\n    render(){\r\n      const{todos,inpValue}=this.state;\r\n  \r\n        return(\r\n            <div className=\"box\">\r\n              <Input inpValue={inpValue} handleChange={this.handleChange} addTodo={this.addTodo} />\r\n             <List todos={todos} renderTodos={this.renderTodos} />\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\nexport default TodoList;","import React,{Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport TodoList from './pages/TodoList';\n\n\nReactDOM.render(\n  <TodoList />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}